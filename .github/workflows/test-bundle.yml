name: 'Test Minified Web Bundle'
on:
  workflow_call:
    inputs:
      # Required Inputs
      bundle_ci_artifact:
        description: 'CI Artifact Name for Web Bundle'
        required: true
        type: string
      bundle_size:
        description: "Expected Bundle Size on disk, computed by 'du -sh'"
        type: string
        required: true
      expected_number_of_files:
        description: 'Expected Number of Files in the Bundle, used for testing'
        type: number
        required: true
      # Optional Inputs
      bundle_size_acceptance:
        description: 'Max Bundle Size in MB'
        required: false
        type: number
        default: 3


jobs:
  test_bundle:
    runs-on: ubuntu-latest
    env:
      _BUNDLE_DIR: web_bundle
    steps:
      # CI ARTIFACTS - Download Web Bundle html/css/js ##
      - name: Download Web Bundle - Artifacts
        uses: actions/download-artifact@v4
        with:
          # Artifact reference name (aka key) to download
          name: ${{ inputs.bundle_ci_artifact }}
          # Host local path to download the Artifact to
          path: ${{ env._BUNDLE_DIR }}

      - name: Measure Bundle Size
        id: bundle_size

        # parse '2.7M  public' into '2.7M'
        run: echo BUNDLE_SIZE=$(du -sh "${{ env._BUNDLE_DIR }}" | cut -f1) >> $GITHUB_ENV

      - run: 'echo "*Bundle Size*: **${{ env.BUNDLE_SIZE }}**" >> $GITHUB_STEP_SUMMARY'

      - run: echo "BUNDLE_SIZE_IN_MB=$(echo '${{ env.BUNDLE_SIZE }}' | tr -d 'MB')" >> $GITHUB_ENV

      - run: echo "SIZE_VALUE=$(echo '${{ env.BUNDLE_SIZE_IN_MB }}' | tr ',' '.')" >> $GITHUB_ENV

      - name: 'Verify Bundle Size smaller than ${{ inputs.bundle_size_acceptance }} MB'
        run: |
          if [ $(bc <<< "${{ env.SIZE_VALUE }} > ${{ inputs.bundle_size_acceptance }}") -eq 1 ]; then
            echo "[ERROR] Bundle Size ${{ env.SIZE_VALUE }} is GREATER than ${{ inputs.bundle_size_acceptance }} MB!"
            echo "[INFO] Regression has happened! Exiting with status code 1"
            echo "**Regression has happend!**" >> $GITHUB_STEP_SUMMARY
            echo " - Bundle Size: **${{ env.SIZE_VALUE }} MB**" >> $GITHUB_STEP_SUMMARY
            echo "is bigger than" >> $GITHUB_STEP_SUMMARY
            echo " - Max Acceptable Bundle Size: **${{ inputs.bundle_size_acceptance }} MB**" >> $GITHUB_STEP_SUMMARY
            echo "'Automated Bundle Tests' **shall FAIL**" >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "**Congrats!** Bundle Size did not exceed ${{ inputs.bundle_size_acceptance }} MB" >> $GITHUB_STEP_SUMMARY
          fi

      
      # Web bundle TESTS, assuming it is a gatsby SSR site of an SPA

# Expected bundle structure:
# drwxrwxrwx 1 root root      0 Jun 29 16:46  404
# -rwxrwxrwx 1 root root   1769 Jun 29 16:46  404.html
# -rwxrwxrwx 1 root root  87132 Jun 29 16:46  app-a0858404f12ca10a33dd.js
# -rwxrwxrwx 1 root root    246 Jun 29 16:46  app-a0858404f12ca10a33dd.js.LICENSE.txt
# -rwxrwxrwx 1 root root 414141 Jun 29 16:46  app-a0858404f12ca10a33dd.js.map
# -rwxrwxrwx 1 root root    275 Jun 29 16:46  chunk-map.json
# -rwxrwxrwx 1 root root    761 Jun 29 16:46  component---src-pages-404-tsx-37e9974fe7ddd09a4d26.js
# -rwxrwxrwx 1 root root   1936 Jun 29 16:46  component---src-pages-404-tsx-37e9974fe7ddd09a4d26.js.map
# -rwxrwxrwx 1 root root 170681 Jun 29 16:46  component---src-pages-index-tsx-51cc0fb0b2bf08eb2f7c.js
# -rwxrwxrwx 1 root root 734923 Jun 29 16:46  component---src-pages-index-tsx-51cc0fb0b2bf08eb2f7c.js.map
# -rwxrwxrwx 1 root root 140799 Jun 29 16:46  framework-81a8cf24be6209802093.js
# -rwxrwxrwx 1 root root    721 Jun 29 16:46  framework-81a8cf24be6209802093.js.LICENSE.txt
# -rwxrwxrwx 1 root root 355920 Jun 29 16:46  framework-81a8cf24be6209802093.js.map
# -rwxrwxrwx 1 root root  38332 Jun 29 16:46  index.html
# drwxrwxrwx 1 root root   4096 Jun 29 16:46  page-data
# drwxrwxrwx 1 root root   4096 Jun 29 16:46 '~partytown'
# -rwxrwxrwx 1 root root  85042 Jun 29 16:46  polyfill-6534e443b1457de06b09.js
# -rwxrwxrwx 1 root root 208013 Jun 29 16:46  polyfill-6534e443b1457de06b09.js.map
# -rwxrwxrwx 1 root root     99 Jun 29 16:46  robots.txt
# -rwxrwxrwx 1 root root    389 Jun 29 16:46  sitemap.xml
# -rwxrwxrwx 1 root root   3422 Jun 29 16:46  styles.c332001ae72ea32dc04e.css
# -rwxrwxrwx 1 root root   4997 Jun 29 16:46  webpack-runtime-70a38c66ba5dcf943ed0.js
# -rwxrwxrwx 1 root root  23340 Jun 29 16:46  webpack-runtime-70a38c66ba5dcf943ed0.js.map
# -rwxrwxrwx 1 root root   1652 Jun 29 16:46  webpack.stats.json

      # ls -l into the bundle directory
      - name: List Bundle Directory
        run: ls -l ${{ env._BUNDLE_DIR }}
      - run: ls -laR ${{ env._BUNDLE_DIR }}

      # Test 1: Verify standard files are present: index.html, sitemap.xml, etc
      - name: Verify index.html, sitemap.xml, robots.txt, webpack.stats.json, etc are present
        working-directory: ${{ env._BUNDLE_DIR }}
        run: |
          if [ ! -f index.html ]; then
            echo "[ERROR] index.html is missing!"
            exit 1
          fi
          if [ ! -f sitemap.xml ]; then
            echo "[ERROR] sitemap.xml is missing!"
            exit 1
          fi
          if [ ! -f robots.txt ]; then
            echo "[ERROR] robots.txt is missing!"
            exit 1
          fi
          if [ ! -f webpack.stats.json ]; then
            echo "[ERROR] webpack.stats.json is missing!"
            exit 1
          fi
          if [ ! -f chunk-map.json ]; then
            echo "[ERROR] chunk-map.json is missing!"
            exit 1
          fi
          if [ ! -f 404.html ]; then
            echo "[ERROR] 404.html is missing!"
            exit 1
          fi

      # Test 2: Verify the presence of the main bundle files
      - name: Verify main bundle files are present
        working-directory: ${{ env._BUNDLE_DIR }}
        run: |
          if [ ! -f app-*.js ]; then
            echo "[ERROR] app-*.js is missing!"
            exit 1
          fi
          if [ ! -f framework-*.js ]; then
            echo "[ERROR] framework-*.js is missing!"
            exit 1
          fi
          if [ ! -f polyfill-*.js ]; then
            echo "[ERROR] polyfill-*.js is missing!"
            exit 1
          fi
          if [ ! -f styles.*.css ]; then
            echo "[ERROR] styles.*.css is missing!"
            exit 1
          fi
          if [ ! -f webpack-runtime-*.js ]; then
            echo "[ERROR] webpack-runtime-*.js is missing!"
            exit 1
          fi

      # Test 3: Verify the presence of the page-data directory
      - name: Verify page-data directory is present
        working-directory: ${{ env._BUNDLE_DIR }}
        run: |
          if [ ! -d page-data ]; then
            echo "[ERROR] page-data directory is missing!"
            exit 1
          fi

      # [INFO]: Static Directory may or may not exist
      - name: Check if static directory exists
        working-directory: ${{ env._BUNDLE_DIR }}
        run: |
          echo "## Static Directory" >> $GITHUB_STEP_SUMMARY
          if [ ! -d static ]; then
            echo "[INFO] 'static' directory isn't present."
            echo "Directory \`static\` isn't present in the bundle" >> $GITHUB_STEP_SUMMARY
          else
            echo "[INFO] 'static' directory is present."
            echo "Directory \`static\` is present in the bundle" >> $GITHUB_STEP_SUMMARY
          fi

      # Test 5: Verify the presence of the 404 directory
      - name: Verify 404 directory is present
        working-directory: ${{ env._BUNDLE_DIR }}
        run: |
          if [ ! -d 404 ]; then
            echo "[ERROR] 404 directory is missing!"
            exit 1
          fi

      # Test 6: Verify the presence of the ~partytown directory
      - name: Verify ~partytown directory is present
        working-directory: ${{ env._BUNDLE_DIR }}
        run: |
          if [ ! -d '~partytown' ]; then
            echo "[ERROR] ~partytown directory is missing!"
            exit 1
          fi

      # Strict Sanity Check for all expected files
      # find Directory_name -ls
      - name: 'Sanity Check that exactly ${{ inputs.expected_number_of_files }} files are included in the bundle'
        run: |
          NB_FILES=$(find ${{ env._BUNDLE_DIR }} -type f -ls | wc -l)
          echo "[INFO] Number of Files in Bundle: $NB_FILES"
          echo " - Number of Files in Web Bundle: **${NB_FILES}**" >> $GITHUB_STEP_SUMMARY

          if [ $NB_FILES -ne ${{ inputs.expected_number_of_files }} ]; then
            echo "[ERROR] Found ${NB_FILES} files in web bundle, but ${{ inputs.expected_number_of_files }} are expected"
            echo "exiting with status code 1"
            exit 1
          fi
