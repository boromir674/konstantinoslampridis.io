# CI/CD Pipeline

# Test -> Build -> Deploy

# Triggers
on:
  push:
    branches:
      - "main"
      - "dev"
      - "ci"
    # we use release branch for semver/changelog updates and deploying 'rc' tags
    # thus we filter out events for branch 'release', to NOT trigger
    # avoid triggering on sem ver bump / changelog update commits
      - "!release"
      # [Git Ops]: do not trigger on Branches used only for PR labeling
      - '!board-n-release-*'
      - '!board-request-*'
    tags:
      - v*


# Note: env context only available as env vars in code, not in 'if' conditions!
# Many 'Job Triggers' can be overridden using the 'Repository Variables' gh feature:
#  - https://github.com/boromir674/konstantinoslampridis.io/settings/variables/actions

jobs:

  ### UNIT TEST ###
  test:  ## Unless override, default trigger 'always'
    uses: ./.github/workflows/test-typescript.yml
    with:
      trigger: '{"default_trigger": true, "override": "${{ vars.OV_TEST_UNIT }}"}'

  # HOST COVERAGE Results
  codecov:
    needs: test
    uses: ./.github/workflows/codecov.yml
    # as long as test was triggered, we run codecov. both when Test PASSed or FAILed
    if: always() && ${{ !contains(fromJSON('["skipped", "cancelled"]'), needs.test.result) }}
    with:
      coverage_ci_artifact: ${{ needs.test.outputs.COVERAGE_ARTIFACT }}
      file_prefix: clover
    secrets:
      # leverages repository secret CODECOV_TOKEN
      CODECOV_TOKEN: ${{ secrets.DOCKER_PASSWORD }}

  lint:
    uses: ./.github/workflows/lint.yml
    with:
      trigger: '{"default_trigger": true, "override": "${{ vars.OV_LINT }}"}'
      allow_fail: false

  ## BUILD PRODUCTION MINIFIED BUNDLE
  gatsby:
    uses: ./.github/workflows/build-bundle.yml
    with:
      trigger: "{'default_trigger': ${{ vars.OV_DEPLOY == 'false' && 'false' || 'true' }}, 'override': '${{ vars.OV_GATSBY }}'}"
      ci_artifact: web_bundle

  # LIGHTHOUSE CI
  audit:
    needs: gatsby
    if: always() && ( vars.OV_LIGHTHOUSE == 'true' || ( vars.OV_LIGHTHOUSE != 'false' && success() ) )
    uses: ./.github/workflows/lighthouse.yml
    with:
      target_ci_artifact: web_bundle
      # target_url: 'https://konstantinoslampridis.io'

  ### E2E TEST ###
  e2e:
    needs: gatsby
    if: always() && ( vars.OV_E2E_TESTS == 'true' || ( vars.OV_E2E_TESTS != 'false' && success() ) )
    uses: ./.github/workflows/e2e-test.yml
    with:
      website_artifact: web_bundle

  # Test Web Bundle
  test_bundle:
    needs: gatsby
    uses: ./.github/workflows/test-bundle.yml
    with:
      bundle_ci_artifact: web_bundle
      # expectations for assertions
      expected_number_of_files: 50
      bundle_size: ${{ needs.gatsby.outputs.BUNDLE_SIZE }}
      # Configurable Acceptance Criteria: accept up to 2.5MB
      bundle_size_acceptance: 2.6

  # LOGICAL AGGREGATION OF CI QA Jobs
  check:
    if: always()
    needs: ['test', 'lint', 'test_bundle', 'e2e', 'audit']
    uses: boromir674/automated-workflows/.github/workflows/go-single-status.yml@v1.13.1
    with:
      # TODO: allow-skips passes an empty array here
      # check syntax needs.*.result == 'skipped'
      allowed-skips: ${{ needs.*.result == 'skipped' || '[]' }}
      needs_json: ${{ toJSON(needs) }}  # should never change

  signal_deploy:
    needs: check  # add ['test', 'e2e', ..] if 'check' job.if and/or job.needs changes
    if: ${{ startsWith(github.event.ref, 'refs/tags/v') }}
    uses: ./.github/workflows/signal-deploy.yml
    with:
      main_branch: main
      release_branch: release

  # DEPLOY to AWS or GITHUB PAGES the 'Web Bundle' (of files)
  deploy:
    needs: signal_deploy
    if: always() && needs.signal_deploy.outputs.AUTOMATED_DEPLOY == 'true'

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    uses: ./.github/workflows/deploy.yml
    with:
      # map prod: s3 and test: github-pages
      environment: ${{ needs.signal_deploy.outputs.ENVIRONMENT_NAME == 'PROD_DEPLOYMENT' && 's3' || needs.signal_deploy.outputs.ENVIRONMENT_NAME == 'TEST_DEPLOYMENT' && 'github-pages' || 'unsupported-environment' }}
      website_artifact: web_bundle
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
      AWS_CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}
