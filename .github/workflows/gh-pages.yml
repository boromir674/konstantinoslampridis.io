name: Deploy to Github Pages
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: 'Environment to target for deployment. This is the name of the environment as referenced in github settings/secrets/actions'
      website_artifact:
        default: 'web_bundle'
        required: false
        type: string
        description: 'The website artifact to download and deploy to Github Pages'
    secrets:
      # Bypassing https://github.com/actions/runner/issues/1490
      AWS_ACCESS_KEY_ID: 
        required: false
      AWS_SECRET_ACCESS_KEY: 
        required: false
      AWS_BUCKET_NAME: 
        required: false
jobs:
  # Deploy job
  static_site:
    runs-on: ubuntu-latest
    name: 'Deploy to ${{ inputs.environment }}'

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Dynamic environment at "compile time", provides varrying env vars
    environment:
      # name: ${{ inputs.environment }}
      name: ${{ inputs.environment == 'PROD_DEPLOYMENT' && 's3' || inputs.environment == 'TEST_DEPLOYMENT' && 'github-pages' || 'unsupported-env-name' }}
      # # url is outputed here! See actions/deploy-pages@v4 hack below
      # url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    steps:
      ## DEPLOY Github Pages ## V1 not working
      # - name: Deploy to GitHub Pages
      #   # if: inputs.environment == 'github-pages'
      #   if: inputs.environment == 'TEST_DEPLOYMENT'
      #   id: deployment
      #   # has a hack that makes environment.url act as output of this action
      #   uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
      #   with:
      #     artifact_name: ${{ inputs.website_artifact }}

      # CI ARTIFACTS - Download Html/js/css files #
      - name: Download Web Bundle html/css/js - Artifacts
        # if: inputs.environment == 's3'
        # if: inputs.environment == 'PROD_DEPLOYMENT'
        uses: actions/download-artifact@v4
        with:
          # Artifact reference name (aka key) to download
          name: ${{ inputs.website_artifact }}
          # Host local path to download the Artifact to
          path: public

      # V2 requires prior artifacts download
      - name: Deploy to Github Pages
        if: inputs.environment == 'TEST_DEPLOYMENT'
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      ## DEPLOY S3 ##
      # aws-cli is available on the host image!
      - name: Deploy to S3
        if: inputs.environment == 's3'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
        run: aws s3 sync ./public s3://${{ secrets.AWS_BUCKET_NAME }} --delete --acl public-read
