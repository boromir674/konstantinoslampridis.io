name: Deploy Web Bundle, as static website
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: 'Environment to target for deployment. This is the name of the environment as referenced in github settings/secrets/actions'
      website_artifact:
        default: 'web_bundle'
        required: false
        type: string
        description: 'The website artifact to download and deploy to Github Pages'
    secrets:
      # Bypassing https://github.com/actions/runner/issues/1490
      AWS_ACCESS_KEY_ID: 
        required: false
      AWS_SECRET_ACCESS_KEY: 
        required: false
      AWS_BUCKET_NAME: 
        required: false

jobs:
  deploy_static_website:
    runs-on: ubuntu-latest
    name: '${{ inputs.environment }}'

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    environment:
      name: ${{ inputs.environment }}
      # url is outputed here! See actions/deploy-pages@v4 hack below
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # CI ARTIFACTS - Download Html/js/css files #
      - name: Download Web Bundle html/css/js - Artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.website_artifact }}
          path: public

      # CI ARTIFACT Upload - V2 requires prior artifacts download
      - name: Upload CI Artifact compatible with Github Pages
        if: inputs.environment == 'github-pages'
        uses: actions/upload-pages-artifact@v3
        with:
          path: public
          name: github-pages

      - name: Deploy to GitHub Pages
        if: inputs.environment == 'github-pages'
        id: deployment
        # has a hack that makes environment.url act as output of this action
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
        with:
          artifact_name: github-pages

      ## DEPLOY S3 ##
      - name: Deploy to S3
        if: inputs.environment == 's3'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
        run: aws s3 sync ./public s3://${{ secrets.AWS_BUCKET_NAME }} --delete --acl public-read

      - name: Invalidate Cloudfront Distribution Cache
        if: inputs.environment == 's3'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
          DISTRIBUTION_ID: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}
        run: aws cloudfront create-invalidation --distribution-id "${DISTRIBUTION_ID}" --paths /index.html
            #  aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
