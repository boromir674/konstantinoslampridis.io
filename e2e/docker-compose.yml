# e2e/docker-compose.yml from repo
# https://github.com/bahmutov/cypress-open-from-docker-compose
version: '3.2'
services:

  # this is the web application we are going to test
  # this can be a static file server, an apache instance, etc
  my_app:
    build:
      context: ../
      target: serve_files
    ports:
      - "9000:9000"
    # environment:
    #   - PORT=8123

  # Run Headless Cypress CI: docker-compose run --build --rm cypress
  cypress:
    # the Docker image to use from https://github.com/cypress-io/cypress-docker-images
    # image: "cypress/included:3.2.0"
    image: cypress/included:cypress-12.17.3-node-18.16.0-chrome-114.0.5735.133-1-ff-114.0.2-edge-114.0.1823.51-1
    depends_on:
      - my_app
    environment:
      # pass base url to test pointing at the web application
      - CYPRESS_baseUrl=http://my_app:9000
    # share the current folder as volume to avoid copying
    working_dir: /e2e
    volumes:
      - ./:/e2e
    # overwrite the default command to run Cypress tests
    # on electron browser in headless mode
    entrypoint: cypress run --spec "cypress/e2e/*.cy.js"
    # run specs and avoid specs in cypress/integration/examples folder:
    # - cypress/integration/margins_spec.cy.ts
    # - cypress/integration/spec.cy.ts



## Run Headless Cypress tests (and then close services):
# docker-compose up cypress --exit-code-from cypress

  lighthouse:
    build:
      context: ../
      dockerfile: Dockerfile.lighthouse
    depends_on:
      - my_app
# docker run -it --rm -e CHROME_PATH=/usr/bin/google-chrome -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=$DISPLAY lh http://ssg-fs:9001 --no-enable-error-reporting
# docker run -it --rm -u $(id -u):$(id -g) -e CHROME_PATH=/usr/bin/google-chrome -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=$DISPLAY lh http://ssg-fs:9001 --no-enable-error-reporting
# drop in bash: docker run -it --rm -e CHROME_PATH=/usr/bin/google-chrome -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=$DISPLAY --entrypoint bash lh
# alias lh='yarn run lighthouse'
    environment:
      - CHROME_PATH=/usr/bin/google-chrome
      - DISPLAY=$DISPLAY
    entrypoint: yarn run lighthouse
    # command: http://my_app:9000 --verbose --no-enable-error-reporting
    command: https://konstantinoslampridis.io --chrome-flags="--headless --no-sandbox" --verbose --no-enable-error-reporting
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    # -u $(id -u):$(id -g)
    user: root


## Run Lighthouse in Headless mode (and then close services):
# docker-compose up lighthouse --exit-code-from lighthouse
