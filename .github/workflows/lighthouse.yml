name: Lighthouse Audit
on:
  workflow_call:
    inputs:
      # OPTIONAL
      target_ci_artifact:
        required: false
        type: string
        description: 'CI Artifact with static website to audit'
      target_url:
        required: false
        type: string
        description: 'URL to audit'
      # REQUIRED

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: '18.16.x'

      # Install lhci
      - run: yarn global add @lhci/cli@0.14.x

      # Checkout code into dedicate 'code' subdirectory
      - uses: actions/checkout@v4
        with:
          # Relative path under $GITHUB_WORKSPACE to place the repository
          path: 'code'
      
      # Keep only Lighthouse-relevant config files
      # - run: |
      #     mv code/.lighthouserc.json .

      # Run Lighthouse CI

      # Healthcheck
      - run: lhci healthcheck

      - name: Derive Lighthouse CLI flags from inputs
        # if input url use --url and value
        # if input ci artifact, will will download and serve the artifact later
        # else exit with error msg and 1 exit code
        run: |
          if [ -n "${{ inputs.target_url }}" ]; then
            if [ -n "${{ inputs.target_ci_artifact }}" ]; then
              echo "ERROR: Both target_url and target_ci_artifact inputs are provided. Please provide only one."
              exit 1
            fi
            echo "AUDIT_TARGET=url=${{ inputs.target_url }}" >> $GITHUB_ENV
            echo "[INFO] Will audit URL: ${{ inputs.target_url }}"
          elif [ -n "${{ inputs.target_ci_artifact }}" ]; then
            echo "[INFO] Will donwload and serve Static Site from CI Artifacts"
            echo "SINGAL_ARTIFACT=true" >> $GITHUB_ENV
            echo "AUDIT_TARGET=staticDistDir ./public" >> $GITHUB_ENV
            echo "[INFO] Will audit Static Site from CI Artifact: ${{ inputs.target_ci_artifact }}"
          fi

      - name: 'Download Website bundle (files) from CI Artifact'
        if: env.SINGAL_ARTIFACT == 'true'
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.target_ci_artifact }}
          path: public

      - name: "Audit Site run Assertions and capture exit code"
        # AUTORUN and write .lighthouseci/assertion-results.json in Step Summary
        run: |
          lhci autorun "--collect.${{ env.AUDIT_TARGET }}" --collect.numberOfRuns=1
          exit_code=$?
          echo "[INFO] LHCI exit code: $exit_code"
          echo "## Lighthouse" >> $GITHUB_STEP_SUMMARY
          echo " - LHCI exit code: $exit_code" >> $GITHUB_STEP_SUMMARY
          if [ $exit_code -ne 0 ]; then
            echo "[INFO] LHCI did not pass all default Lighthouse Assertions!"
            echo " - LHCI did not pass all default Lighthouse Assertions!" >> $GITHUB_STEP_SUMMARY
            echo ""  >> $GITHUB_STEP_SUMMARY
            echo "### Assertions Failed: Errors + Warnings" >> $GITHUB_STEP_SUMMARY
            echo "```json" >> $GITHUB_STEP_SUMMARY
            cat ./.lighthouseci/assertion-results.json >> $GITHUB_STEP_SUMMARY
            echo "```" >> $GITHUB_STEP_SUMMARY
          fi

      # per .html audit reports in JSON and Html + assertion-results.json
      - run: ls -la ./.lighthouseci/
        if: always()

      # Upload
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          path: ./.lighthouseci/  # upload this folder
          name: lighthouseci  # under this Artifact name

      # verify assertion-results.json and .ls-assertion-results-gs.json are the same
      - name: 'Verify Gold Standard Performance reached!'
        if: always()
        env:
          RUNTIME_JSON: .lighthouseci/assertion-results.json
          GOLD_STANDARD_JSON: .ls-assertion-results-gs.json
        run: |
          diff -u ${RUNTIME_JSON} ${GOLD_STANDARD_JSON}
          exit_code=$?
          echo "[INFO] Diff exit code: $exit_code"
          echo ""  >> $GITHUB_STEP_SUMMARY
          if [ $exit_code -ne 0 ]; then
            echo "[ERROR] Assertion Results differ from Gold Standard!"
            echo " - Assertion Results differ from Gold Standard!" >> $GITHUB_STEP_SUMMARY
          else
            echo "[INFO] Assertion Results match Gold Standard!"
            echo " - Assertion Results match Gold Standard!" >> $GITHUB_STEP_SUMMARY
          fi
